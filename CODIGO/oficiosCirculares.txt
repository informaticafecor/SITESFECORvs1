<div id="oficios-content">Cargando oficios...</div>

<script>
// PASO 2: Cambiar nombre de funci√≥n aqu√≠
async function loadOficiosFromGitHub() {
    try {
        const GITHUB_USER = 'informaticafecor';
        const REPO_NAME = 'SITESFECCORvs1';
        const BRANCH = 'main';
        
        // PASO 3: Cambiar estas 3 rutas
        const htmlUrl = `https://raw.githubusercontent.com/informaticafecor/SITESFECORvs1/refs/heads/main/oficios_circulares/oficios_circulares.html`;
        const cssUrl = `https://raw.githubusercontent.com/informaticafecor/SITESFECORvs1/refs/heads/main/oficios_circulares/css/styles.css`;
        const jsUrl = `https://raw.githubusercontent.com/informaticafecor/SITESFECORvs1/refs/heads/main/oficios_circulares/js/script.js`;
        
        console.log('Cargando Oficios desde:', htmlUrl);
        
        // Fetch del HTML
        const htmlResponse = await fetch(htmlUrl);
        if (!htmlResponse.ok) throw new Error(`Error HTML: ${htmlResponse.status}`);
        const htmlContent = await htmlResponse.text();
        
        // Fetch del CSS
        const cssResponse = await fetch(cssUrl);
        if (!cssResponse.ok) throw new Error(`Error CSS: ${cssResponse.status}`);
        const cssContent = await cssResponse.text();
        
        // Fetch del JS
        const jsResponse = await fetch(jsUrl);
        if (!jsResponse.ok) throw new Error(`Error JS: ${jsResponse.status}`);
        const jsContent = await jsResponse.text();
        
        // Inyectar CSS
        const styleElement = document.createElement('style');
        styleElement.textContent = cssContent;
        document.head.appendChild(styleElement);
        
        // Inyectar HTML
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = htmlContent;
        const bodyContent = tempDiv.querySelector('body')?.innerHTML || htmlContent;
        // PASO 4: Cambiar ID aqu√≠
        document.getElementById('oficios-content').innerHTML = bodyContent;
        
        // Inyectar y ejecutar JS
        const scriptElement = document.createElement('script');
        scriptElement.textContent = jsContent;
        document.body.appendChild(scriptElement);
        
        console.log('‚úÖ oficios cargado exitosamente desde GitHub');
        
    } catch (error) {
        console.error('‚ùå Error cargando oficios:', error);
        // PASO 4: Cambiar ID aqu√≠ tambi√©n
        document.getElementById('oficios-content').innerHTML = `
            <div style="padding: 20px; border: 2px solid #ff6b6b; background: rgba(255, 107, 107, 0.1); border-radius: 10px; color: white;">
                <h3>‚ùå Error al cargar Oficios</h3>
                <p><strong>Error:</strong> ${error.message}</p>
                <p>Verifica que los archivos existan en: Oficios/</p>
            </div>
        `;
    }
}

// PASO 2: Cambiar nombre de funci√≥n aqu√≠ tambi√©n
document.addEventListener('DOMContentLoaded', loadOficiosFromGitHub);
</script>



<!-- En tu p√°gina de Google Sites, pega esto: -->

<div id="oficios-content" style="min-height: 200px; color: white;">
    <div style="text-align: center; padding: 40px;">
        <h2>üîÑ Cargando Oficios Circulares...</h2>
        <p>Por favor espera mientras se cargan los documentos</p>
    </div>
</div>

<script>
async function loadOficiosFromGitHub() {
    try {
        console.log('üöÄ Iniciando carga de Oficios Circulares...');
        
        const GITHUB_USER = 'informaticafecor';
        const REPO_NAME = 'SITESFECCORvs1';
        const BRANCH = 'main';
        
        // URLs corregidas (verifica que estos archivos existan)
        const htmlUrl = `https://raw.githubusercontent.com/informaticafecor/SITESFECORvs1/refs/heads/main/oficios_circulares/oficios_circulares.html`;
        const cssUrl = `https://raw.githubusercontent.com/informaticafecor/SITESFECORvs1/refs/heads/main/oficios_circulares/css/styles.css`;
        const jsUrl = `https://raw.githubusercontent.com/informaticafecor/SITESFECORvs1/refs/heads/main/oficios_circulares/js/script.js`;
        
        console.log('üìÅ Cargando desde:', {htmlUrl, cssUrl, jsUrl});
        
        // Mostrar progreso
        document.getElementById('oficios-content').innerHTML = `
            <div style="text-align: center; padding: 40px; color: white;">
                <h2>üì• Descargando archivos...</h2>
                <p>Obteniendo HTML, CSS y JavaScript</p>
            </div>
        `;
        
        // Fetch del CSS primero
        console.log('üìÑ Cargando CSS...');
        const cssResponse = await fetch(cssUrl);
        if (!cssResponse.ok) throw new Error(`Error CSS: ${cssResponse.status} - ${cssUrl}`);
        const cssContent = await cssResponse.text();
        
        // Fetch del HTML
        console.log('üìÑ Cargando HTML...');
        const htmlResponse = await fetch(htmlUrl);
        if (!htmlResponse.ok) throw new Error(`Error HTML: ${htmlResponse.status} - ${htmlUrl}`);
        const htmlContent = await htmlResponse.text();
        
        // Fetch del JS
        console.log('üìÑ Cargando JavaScript...');
        const jsResponse = await fetch(jsUrl);
        if (!jsResponse.ok) throw new Error(`Error JS: ${jsResponse.status} - ${jsUrl}`);
        const jsContent = await jsResponse.text();
        
        console.log('‚úÖ Todos los archivos descargados');
        
        // Mostrar progreso
        document.getElementById('oficios-content').innerHTML = `
            <div style="text-align: center; padding: 40px; color: white;">
                <h2>‚ö° Procesando contenido...</h2>
                <p>Aplicando estilos y funcionalidad</p>
            </div>
        `;
        
        // 1. Inyectar CSS primero
        const styleElement = document.createElement('style');
        styleElement.textContent = cssContent;
        document.head.appendChild(styleElement);
        console.log('‚úÖ CSS inyectado');
        
        // 2. Extraer solo el contenido del body del HTML
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = htmlContent;
        
        // Buscar el contenido espec√≠fico (desde .container)
        const containerContent = tempDiv.querySelector('.container');
        let bodyContent;
        
        if (containerContent) {
            bodyContent = containerContent.outerHTML;
            console.log('‚úÖ Contenido del container extra√≠do');
        } else {
            // Fallback: usar todo el body
            bodyContent = tempDiv.querySelector('body')?.innerHTML || htmlContent;
            console.log('‚ö†Ô∏è Usando contenido completo del body');
        }
        
        // 3. Inyectar HTML
        document.getElementById('oficios-content').innerHTML = bodyContent;
        console.log('‚úÖ HTML inyectado');
        
        // 4. Esperar un momento antes de inyectar el JS
        setTimeout(() => {
            try {
                // Limpiar cualquier script anterior
                const oldScripts = document.querySelectorAll('script[data-oficios="true"]');
                oldScripts.forEach(script => script.remove());
                
                // Inyectar y ejecutar JS
                const scriptElement = document.createElement('script');
                scriptElement.setAttribute('data-oficios', 'true');
                scriptElement.textContent = jsContent;
                document.body.appendChild(scriptElement);
                console.log('‚úÖ JavaScript inyectado y ejecutado');
                
                // Verificar que se haya inicializado
                setTimeout(() => {
                    const newsGrid = document.getElementById('newsGrid');
                    if (newsGrid && newsGrid.innerHTML.trim() !== '') {
                        console.log('üéâ ¬°Oficios Circulares cargado exitosamente!');
                    } else {
                        console.warn('‚ö†Ô∏è El contenido se carg√≥ pero puede que no se haya inicializado correctamente');
                    }
                }, 1000);
                
            } catch (jsError) {
                console.error('‚ùå Error ejecutando JavaScript:', jsError);
                throw jsError;
            }
        }, 500);
        
    } catch (error) {
        console.error('‚ùå Error cargando Oficios Circulares:', error);
        
        // Mostrar error detallado
        document.getElementById('oficios-content').innerHTML = `
            <div style="padding: 30px; border: 2px solid #ff6b6b; background: rgba(255, 107, 107, 0.1); border-radius: 15px; color: white; margin: 20px 0;">
                <h3 style="color: #ff6b6b; margin-top: 0;">‚ùå Error al cargar Oficios Circulares</h3>
                <p><strong>Error:</strong> ${error.message}</p>
                <p><strong>Posibles causas:</strong></p>
                <ul style="text-align: left;">
                    <li>Los archivos no existen en el repositorio</li>
                    <li>Las rutas est√°n incorrectas</li>
                    <li>El repositorio es privado</li>
                    <li>Problemas de CORS o red</li>
                </ul>
                <p><strong>Verifica:</strong></p>
                <ol style="text-align: left;">
                    <li>Que existe: <code>oficios_circulares/oficios_circulares.html</code></li>
                    <li>Que existe: <code>oficios_circulares/css/styles.css</code></li>
                    <li>Que existe: <code>oficios_circulares/js/script.js</code></li>
                    <li>Que el repositorio es p√∫blico</li>
                </ol>
                <button onclick="loadOficiosFromGitHub()" style="background: #00cc99; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; margin-top: 15px;">
                    üîÑ Reintentar
                </button>
            </div>
        `;
    }
}

// Ejecutar cuando el DOM est√© listo
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', loadOficiosFromGitHub);
} else {
    // Si ya est√° cargado, ejecutar inmediatamente
    loadOficiosFromGitHub();
}

// Tambi√©n intentar despu√©s de un momento por si acaso
setTimeout(loadOficiosFromGitHub, 1000);
</script>